<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 『高等游民』</title>
    <link>https://senup.github.io/tags/mysql/</link>
    <description>Recent content in mysql on 『高等游民』</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 10 Nov 2023 14:03:43 +0800</lastBuildDate>
    <atom:link href="https://senup.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello，MySQL</title>
      <link>https://senup.github.io/posts/tech/hellomysql/</link>
      <pubDate>Fri, 10 Nov 2023 14:03:43 +0800</pubDate>
      <guid>https://senup.github.io/posts/tech/hellomysql/</guid>
      <description>&lt;h1 id=&#34;mysql-概述&#34;&gt;MySQL 概述&lt;/h1&gt;
&lt;p&gt;在程序员视角看来，用户发送请求到 Java 系统，Java 系统编写 SQL 语句去访问 MySQL 获得数据库的存储数据，进行增删查改。&lt;/p&gt;
&lt;p&gt;接下来讲讲其中的一些部件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要发送网络请求才能进行访问，所以需要引入 &lt;strong&gt;MySQL 驱动&lt;/strong&gt;的 jar 包。&lt;/li&gt;
&lt;li&gt;Java 系统部署在 Tomcat 上面，Tomcat 支持多线程请求。Java 线程请求不止一个，不可能等待单个 MySQL 驱动的线程，并且频繁创建会很消耗资源，因此 Java 系统和 MySQL 这两边都引入了&lt;strong&gt;连接池&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#39;lazy&#39; decoding=&#34;async&#34; src=&#34;https://bestkxt.oss-cn-guangzhou.aliyuncs.com/img/202311101415077.png&#34; alt=&#34;image.png&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;按照上面这个图，MySQL 数据库服务器就会收到网络请求，比如一条 SQL。接下来MySQL 服务器这边就会有对应的部件来执行不同的工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线程：网络请求必须是让线程来处理，所以内部会开启一个工作线程处理。&lt;/li&gt;
&lt;li&gt;SQL 接口：作为接口，负责接收（和处理 SQL）&lt;/li&gt;
&lt;li&gt;SQL 解析器：解析 SQL 语句的含义&lt;/li&gt;
&lt;li&gt;查询优化器：负责计算出最优的查询路径，或着也叫最优的查询计划&lt;/li&gt;
&lt;li&gt;执行器：携带者最优查询计划去访问存储引擎，不断查询或者更新语句，直到得出想要的结果。比如查询到一条数据比对符不符合要求，不符合就接着查询&lt;/li&gt;
&lt;li&gt;存储引擎：真正执行 SQL 语句的地方。这里可以有不同的存储引擎，存储引擎设计了一套先内存后磁盘的机制，确保查询速度足够快并且减轻磁盘访问压力。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
